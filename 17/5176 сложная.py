##(№ 5176) (М. Шагитов) В файле 17-301.txt содержится последовательность целых
##чисел. Элементы последовательности могут принимать целые значения
##от 0 до 10 000. Найдите все тройки элементов последовательности,
##в которых ровно одно число делится на сумму цифр двух других чисел в тройке,
##а сумма чисел тройки меньше, чем сумма цифр всех чисел в файле, делящихся на 12.
##В ответе запишите количество найденных троек,
##затем максимальную из сумм элементов таких троек.
##В данной задаче под тройкой подразумевается
##три идущих подряд элемента последовательности.

with open('17-301.txt') as x:
    s = [int(i) for i in x]
s1 = []
s12 = 0
def f(n):
    s1 = []
    s = str(n)
    for i in range(len(s)):
        s1. append(int(s[i]))
    return(sum(s1))

for i in range(len(s)):
    if s[i]%12 == 0:
        a = s[i]
        s12 += f(a)
        
for i in range(len(s)-2):
    a1 = s[i]
    a2 = s[i+1]
    a3 = s[i+2]
    if ((a1+a2+a3) < s12) and (((a1 % (f(a2)+f(a3)) == 0)
    and (a2 % (f(a1)+f(a3)) != 0)  and (a3 % (f(a1)+f(a2)) != 0))
    or ((a1 % (f(a2)+f(a3)) != 0)
    and (a2 % (f(a1)+f(a3)) == 0)  and (a3 % (f(a1)+f(a2)) != 0))
    or ((a1 % (f(a2)+f(a3)) != 0)
    and (a2 % (f(a1)+f(a3)) != 0)  and (a3 % (f(a1)+f(a2)) == 0))):
        s1.append(s[i] + s[i+1] + s[i+2])
print(len(s1))
print(max(s1))
        
#которых ровно одно число делится на сумму цифр двух других чисел в тройке
    



